---
// Define props from Astro
const {
  title,
  subTitle,
  primaryBtn,
  primaryBtnURL,
  secondaryBtn,
  secondaryBtnURL,
} = Astro.props;
import PrimaryCTA from "@/components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@/components/ui/buttons/SecondaryCTA.astro";
import grupoHorizonte from "@/images/multipla/grupoHorizonte.png";
import ferreroLogo from "@/images/multipla/logoFerrere.png";
import ribeiroLogo from "@/images/multipla/ribeiro.png";
import makingLogo from "@/images/multipla/marca_making_02.png";
import petrogasLogo from "@/images/multipla/petrogas.png";
import galileoLogo from "@/images/multipla/galileo.png";
import rioLimayLogo from "@/images/multipla/Rio limay recursos web_edited.png";
import ecokitLogo from "@/images/multipla/ecokit.png";
import prodeng from "@/images/clients/prodeng.svg";
import { Image } from "astro:assets";

// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
  primaryBtn?: string;
  primaryBtnURL?: string;
  secondaryBtn?: string;
  secondaryBtnURL?: string;
}
---

<section
  class=" animate-section mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Title and description -->
  <div class="mx-auto mb-6 w-full space-y-1 overflow-x-auto text-center">
    <h2
      class="text-balance text-2xl font-bold leading-tight text-esmerald-500 dark:text-esmerald-500 sm:text-3xl md:text-6xl"
      ;
    >
      {title}
    </h2>
    {
      subTitle && (
        <p class="font-dark dark:font-white text-pretty leading-tight text-neutral-800 dark:text-neutral-200">
          {subTitle}
        </p>
      )
    }
  </div>
  <div class="carousel-container">
    <div class="carousel">
      <div class="carousel-slide">
        <Image
          class="carousel-image large-logo"
          src={grupoHorizonte}
          alt="Logo GH"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image large-logo"
          src={ferreroLogo}
          alt="Logo Ferrere"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image large-logo"
          src={ribeiroLogo}
          alt="Logo Ribeiro"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image"
          src={makingLogo}
          alt="Logo Making"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image large-logo"
          src={petrogasLogo}
          alt="Logo Petrogas"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image large-logo"
          src={galileoLogo}
          alt="Logo Galileo"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image small-logo"
          src={rioLimayLogo}
          alt="Logo Rio Limay"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image large-logo"
          src={ecokitLogo}
          alt="Logo Ecokit"
          format="png"
        />
      </div>
      <div class="carousel-slide">
        <Image
          class="carousel-image small-logo"
          src={prodeng}
          alt="Logo Prodeng"
          format="svg"
        />
      </div>
    </div>
    <button class="carousel-prev">&lt;</button>
    <button class="carousel-next">&gt;</button>
  </div>
</section>

<div class=" animate-section mt-7 grid w-full justify-center gap-3 sm:inline-flex">
  {primaryBtn && <PrimaryCTA title={primaryBtn} url={primaryBtnURL} />}
  {secondaryBtn && <SecondaryCTA title={secondaryBtn} url={secondaryBtnURL} />}
</div>


<style>
  .carousel-container {
  position: relative;
  max-width: 100%;
  overflow: hidden;

  
}

.carousel {
  display: flex;
  transition: transform 1s ease-in-out;
  align-items: center; /* Centra verticalmente las imágenes */
}

.carousel-slide {
  min-width: 100%;
}

@media (min-width: 768px) {
  .carousel-slide {
    min-width: 33.33%; /* Muestra tres imágenes por vez en pantallas grandes */
  }
}

.carousel-image {
  display: block;
  width: auto;
  max-height: 80px;
  margin: 0 auto;
}

.carousel-image.small-logo {
  max-height: 65px;
}

.carousel-image.large-logo {
  max-height: 110px;
}

.carousel-prev,
.carousel-next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: #65b22c;
  color: #fff;
  border: none;
  padding: 10px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.carousel-prev:hover,
.carousel-next:hover {
  background-color: #a3d180;
}

.carousel-prev {
  left: 10px;
}

.carousel-next {
  right: 10px;
}

</style>



<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
  const carousel = document.querySelector('.carousel');
  const prevButton = document.querySelector('.carousel-prev');
  const nextButton = document.querySelector('.carousel-next');

  let index = 0;
  const slides = document.querySelectorAll('.carousel-slide');
  const intervalTime = 3000; // Tiempo en milisegundos para el cambio automático

  const updateCarousel = () => {
    const visibleSlides = getVisibleSlides();
    const offset = -index * (100 / visibleSlides);
    carousel.style.transform = `translateX(${offset}%)`;
  };

  const goToNextSlide = () => {
    const visibleSlides = getVisibleSlides();
    index = (index < slides.length - visibleSlides) ? index + 1 : 0;
    updateCarousel();
  };

  prevButton.addEventListener('click', () => {
    const visibleSlides = getVisibleSlides();
    index = (index > 0) ? index - 1 : slides.length - visibleSlides;
    updateCarousel();
  });

  nextButton.addEventListener('click', goToNextSlide);

  // Cambio automático de diapositiva
  setInterval(goToNextSlide, intervalTime);

  const getVisibleSlides = () => {
    return window.innerWidth >= 768 ? 3 : 1; // Muestra 3 imágenes en pantallas grandes y 1 en pantallas pequeñas
  };

  // Actualizar el carrusel al redimensionar la ventana
  window.addEventListener('resize', updateCarousel);
});
</script>