---
import MainLayout from 'src/layouts/MainLayout.astro';
import { isValidEmail } from "src/utils/isValidEmail.ts";
import nodemailer from 'nodemailer';
import dotenv from 'dotenv';
import { Readable } from 'stream';

dotenv.config();

const errors = { nombre: "", apellido: "", email: "", telefono: "", mensaje: "", archivo: "" };
 
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const nombre = data.get("nombre") as string;
    const apellido = data.get("apellido") as string;
    const email = data.get("email") as string;
    const telefono = data.get("telefono") as string;
    const mensaje = data.get("mensaje") as string;
    const archivo = data.get("archivo") as File;

    // Validar los datos del formulario
    if (typeof nombre !== "string" || nombre.length < 1) {
      errors.nombre = "Ingresa tu nombre completo.";
    } else if (nombre.length > 50) {
    errors.nombre = "El nombre no puede exceder los 50 caracteres.";}

    if (typeof apellido !== "string" || apellido.length < 1) {
      errors.apellido = "Ingresa tu apellido.";
    } else if (apellido.length > 50) {
    errors.apellido = "El apellido no puede exceder los 50 caracteres."; }

    if (typeof email !== "string" || !isValidEmail(email)) {
      errors.email = "Email no valido.";
    } else if (email.length > 100) {
    errors.email = "El correo electrónico no puede exceder los 80 caracteres."; }


    if (typeof telefono !== "string" || telefono.length < 10) {
      errors.telefono = "Ingresa un número de teléfono valido.";
    } else if (telefono.length > 15) {
    errors.telefono = "El número de teléfono no puede exceder los 15 caracteres."; }



    if (typeof mensaje !== "string" || mensaje.length < 1) {
      errors.mensaje = "Escribe el mensaje deseado.";
    } else if (mensaje.length > 1000) {
    errors.mensaje = "El mensaje no puede exceder los 1000 caracteres."; }


    if (!archivo || archivo.size === 0) {
      errors.archivo = "Por favor, adjuntá tu CV.";
 
    }
    const hasErrors = Object.values(errors).some(msg => msg);
    if (!hasErrors) {
      // Verificar si las variables de entorno están definidas
      if (!process.env.EMAIL_USER || !process.env.EMAIL_APP_PASSWORD) {
        throw new Error("Missing email credentials in environment variables.");
      }

      // Configurar el transportador de nodemailer
      const transporter = nodemailer.createTransport({
        service: 'gmail',
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_APP_PASSWORD,
        },
        tls: {
          rejectUnauthorized: false,
        },
      });

      const attachmentBuffer = archivo ? await archivo.arrayBuffer() : Buffer.from('');

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: 'postulaciones@multipla.com.ar',
        replyTo: email,
        subject: `Nuevo ingreso de Cv: ${nombre} ${apellido}`,
        text: `Detalle:\nNombre: ${nombre}\nApellido: ${apellido}\nEmail: ${email}\nTeléfono: ${telefono}\nMensaje: ${mensaje}`,
        attachments: [
          {
            filename: archivo?.name || 'file.txt',
            content: Buffer.from(attachmentBuffer),
          },
        ],
      };

      // Enviar correo electrónico
      await transporter.sendMail(mailOptions);

      console.log("Inquiry submitted:", { nombre, apellido, email, telefono, mensaje, archivo });
    } else {
      console.error("Validation errors:", errors);
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error("Error processing inquiry:", error.message);
    }
  }
}

const title = "Trabajá con nosotros";
const subTitle = "Envianos tu CV para sumarte a nuestro equipo.";
const formTitle = "Completa el siguiente formulario";
const pageTitle: string = `Trabaja con nosotros`;
---
<MainLayout title={pageTitle}>
  <section class=" animate-section mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
    <div class="mx-auto w-full">
      <div class="text-center">
        <h1 class="mt-3 text-emerald-500 text-3xl font-bold tracking-tight dark:text-neutral-200 md:text-4xl md:leading-tight">
          {title}
        </h1>
        <p class="mt-3 md:text-2xl text-pretty font-dark text-neutral-800 dark:text-neutral-200">
          {subTitle}
        </p>
      </div>
      <div class="mt-12 grid items-center gap-6 lg:grid-cols-1 lg:gap-16">
        <div class="flex flex-col rounded-xl p-4 sm:p-6 lg:p-8 w-full">
          <h2 class="mb-8 md:text-3xl font-bold text-neutral-800 dark:text-neutral-200">
            {formTitle}
          </h2>
          <div class="form-container">
            <form method="POST" class="w-full" enctype="multipart/form-data">
              <div class="form-row">
                <div class="form-column">
                  <label class="form-label" for="nombre">
                    Nombre:
                    <input class="form-input" type="text" name="nombre" id="nombre" />
                  </label>
                  {errors.nombre && <p class="form-error">{errors.nombre}</p>}
                </div>
                <div class="form-column">
                  <label class="form-label" for="apellido">
                    Apellido:
                    <input class="form-input" type="text" name="apellido" id="apellido" />
                  </label>
                  {errors.apellido && <p class="form-error">{errors.apellido}</p>}
                </div>
              </div>
              <label class="form-label" for="email">
                Correo electrónico:
                <input class="form-input" type="email" name="email" id="email" required />
              </label>
              {errors.email && <p class="form-error">{errors.email}</p>}
              
              <label class="form-label" for="telefono">
                Teléfono:
                <input class="form-input" type="tel" name="telefono" id="telefono" required minlength="10" />
              </label>
              {errors.telefono && <p class="form-error">{errors.telefono}</p>}
              
              <label class="form-label" for="mensaje">
                Mensaje:
                <textarea class="form-input" name="mensaje" id="mensaje" rows="4"></textarea>
              </label>
              {errors.mensaje && <p class="form-error">{errors.mensaje}</p>}
              
              <label class="form-label" for="archivo">
                Adjuntar archivo:
                <input class="form-input" type="file" name="archivo" id="archivo" required />
              </label>
              {errors.archivo && <p class="form-error">{errors.archivo}</p>}
              
              <button type="submit" class="form-button">Enviar</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<style>
  .form-container {
    width: 100%;
    margin: 0 auto;
    padding: 2rem;
    background-color: #f9fafb;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border: 2px solid #000;
  }
  .form-title {
    font-size: 2.5rem;
    color: #1f2937;
    margin-bottom: 1rem;
    text-align: center;
  }
  .form-row {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }
  .form-column {
    flex: 1;
    min-width: 200px;
  }
  .form-label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #060708;
  }
  .form-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    font-size: 1rem;
    color: #1f2937;
  }
  .form-input:focus {
    outline: none;
    border-color: #56b15d;
    box-shadow: 0 0 0 1px #37af33;
  }
  .form-button {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-weight: 500;
    color: #fff;
    background-color: #56b15d;
    border: none;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
    width: 100%;
  }
  .form-button:hover {
    background-color: #bdd4a7;
  }
  .form-error {
    color: #dc2626;
    font-size: 0.875rem;
    margin-top: -0.5rem;
    margin-bottom: 1rem;
  }

  @media (max-width: 768px) {
    .form-column {
      min-width: 100%;
    }
  }
</style>
